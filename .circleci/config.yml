# version: 2.1
# jobs:
#   build:
#     docker:
#     steps:
#       - checkout
      
#       

#       - run: |
#           docker build -t getmein1234/get-me-in:$TAG .
#           echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
#           docker push getmein1234/get-me-in:$TAG

# version: 2.1
# orbs:
#   aws-ecr: circleci/aws-ecr@0.0.2
# workflows:
#   build-and-deploy:
#     jobs:
#       - aws-ecr/build_and_push_image:
#           account-url: "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
#           repo: "${AWS_RESOURCE_NAME_PREFIX}"
#           region: ${AWS_DEFAULT_REGION}
#           tag: "${CIRCLE_SHA1}"


version: 2
jobs:
  build:
    docker:
      # using custom image, see .circleci/images/primary/Dockerfile
      - image: circleci/cci-demo-docker-primary:0.0.2
      - image: circleci/golang:1.13

    working_directory: /go/src/github.com/ProjectReferral/Get-me-in

    steps:
      - checkout

      - setup_remote_docker:
          docker_layer_caching: true

      # This should go into custom primary image, here's only for the sake of explanation
      # This should go into custom primary image, here's only for the sake of explanation
      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose

      - run:
          name: Build service
          command: make

      - run:
          name: Start container and verify it's working
          command: |
            set -x
            docker-compose up -d

            # docker-compose will start 2 containers, the one with service will be named `contacts`
            # we start another container with curl in the same network as `contacts`, this way we have
            # all exposed ports from `contacts` available on `localhost` in this new container
            docker run --network container:contacts \
              appropriate/curl --retry 10 --retry-delay 1 --retry-connrefused http://localhost:8080

      - deploy:
          name: Build and push Docker image
          command: |
            TAG="0.1.${CIRCLE_BUILD_NUM}"
            docker build -t circleci/cci-demo-docker:$TAG .
            docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
            docker push circleci/cci-demo-docker:$TAG
            =324